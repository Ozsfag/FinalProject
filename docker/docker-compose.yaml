services:

  app:
    build:
      context: services/app
      dockerfile: Dockerfile
    command: java -jar ./app.jar
    environment:
      - PORT=8080
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres/search_engine
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - postgres


  postgres:
    build:
      context: services/postgres
      dockerfile: ../Dockerfile
    container_name: postgres_container
    image: postgres:16.1-alpine
    environment:
      POSTGRES_DB: "search_engine"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "30091998As!"
      PGDATA: "/var/lib/postgresql/data/pgdata"
      MAX_CONNECTION: 200
    volumes:
      - ./src/main/resources/init-scripts/init-database.sql:/docker-entrypoint-initdb.d/init-database.sql
      - search-engine-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"


    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d search_engine"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - postgres

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:7.2
    environment:
      PGADMIN_DEFAULT_EMAIL: "Ozsfag3154artem@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "30091998As!"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - postgres

volumes:
  search-engine-data:
  pgadmin-data:

networks:
  postgres: